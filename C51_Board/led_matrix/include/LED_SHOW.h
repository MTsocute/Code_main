//
// Created by shuhe on 2024/11/5.
//

#ifndef LED_MATRIX_LED_SHOW_H
#define LED_MATRIX_LED_SHOW_H

#include "mcs51/8052.h"  // 包含8052单片机的头文件，提供寄存器定义等信息
#include "LED_SHOW.h"

// 定义单片机的控制引脚
__sbit __at(0xB5)
        RCK;  // RCLK引脚，连接到74HC595的锁存时钟（RCLK）
__sbit __at(0xB6)
        SCK;  // SRLCK引脚，连接到74HC595的移位时钟（SRLCK）
__sbit __at(0xB4)
        SER;  // SER引脚，连接到74HC595的串行数据输入（SER）



const unsigned char love_code[] = {
        0b00111000,
        0b01000100,
        0b10000010,
        0b01000001,
        0b01000001,
        0b10000010,
        0b01000100,
        0b00111000
};

const unsigned char kun_kun_1[] = {
        0x00,
        0x00,
        0x20,
        0x11,
        0x12,
        0x7C,
        0x7E,
        0x19,
};

const unsigned char hello_animatino[] = {
        0x7F, 0x08, 0x08, 0x08, 0x7F, 0x00, 0x0E, 0x15, 0x15, 0x15, 0x08, 0x00, 0x7E, 0x01, 0x02, 0x00,
        0x7E, 0x01, 0x02, 0x00, 0x0E, 0x11, 0x11, 0x0E, 0x00, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


const unsigned char spongebob[] = {
        0x60,0x40,0x79,0xAF,0xA8,0x7E,0x42,0x60
};


const unsigned char kun_kun_Dance[] = {
        0x00, 0x0E, 0x1B, 0x7F, 0x7F, 0x1B, 0x0E, 0x00,
        0x00, 0x04, 0x0C, 0x18, 0x7F, 0x7F, 0x1B, 0x0E,
        0x00, 0x08, 0x0C, 0x05, 0x7F, 0x7F, 0x1E, 0x0C,
        0xC0, 0x00, 0x41, 0x22, 0x1A, 0x7C, 0x7D, 0x1A,
        0x00, 0x60, 0x61, 0x12, 0x0A, 0x7E, 0x7F, 0x08,
        0x00, 0x06, 0x0E, 0x08, 0x0B, 0x3E, 0x3E, 0x0B,
        0x00, 0x03, 0x0B, 0x08, 0x0B, 0x3E, 0x3E, 0x0B,
        0x00, 0x06, 0x0E, 0x08, 0x09, 0x3F, 0x3E, 0x0B,
        0x00, 0x0E, 0x13, 0x7E, 0x7E, 0x1F, 0x0E, 0x00,
        0x08, 0x13, 0x7E, 0x7E, 0x12, 0x1D, 0x0C, 0x00,
        0x09, 0x12, 0x7E, 0x7F, 0x10, 0x13, 0x03, 0x00,
        0x09, 0x12, 0x7E, 0x7F, 0x10, 0x1C, 0x0C, 0x00,
        0x00, 0x0C, 0x15, 0x7E, 0x7E, 0x17, 0x0E, 0x00,
        0x00, 0x30, 0x38, 0x0D, 0x7E, 0x7F, 0x1D, 0x08,
        0xC0, 0xC0, 0x30, 0x1B, 0x7C, 0x7F, 0x08, 0x00,
        0x00, 0x00, 0x37, 0xF8, 0xFA, 0x34, 0x00, 0x00,
        0x00, 0x00, 0x1B, 0x7C, 0x7C, 0x1A, 0x01, 0x00,
        0x00, 0x00, 0x09, 0x1E, 0x7C, 0x7F, 0x18, 0x00,
        0x00, 0x00, 0x1B, 0x7C, 0x7C, 0x1B, 0x00, 0x00,
        0x00, 0x00, 0x09, 0x1E, 0x7C, 0x7F, 0x18, 0x00,
        0x00, 0x00, 0x1B, 0x7C, 0x7C, 0x1B, 0x00, 0x00,
        0x08, 0x10, 0x16, 0x7C, 0x7F, 0x10, 0x08, 0x00,
        0x00, 0x10, 0x13, 0x7C, 0x7E, 0x18, 0x00, 0x00,
        0x00, 0x08, 0x13, 0x7C, 0x7F, 0x10, 0x10, 0x00,
        0x00, 0x08, 0x12, 0xFC, 0xFD, 0x3A, 0x00, 0x00,
        0x00, 0x08, 0x12, 0xFC, 0xFC, 0x22, 0x10, 0x00,
        0x00, 0x00, 0x61, 0x12, 0x7C, 0x7F, 0x10, 0x60,
        0x00, 0x00, 0x20, 0x11, 0x12, 0x7C, 0x7E, 0x19,
        0x00, 0x00, 0x00, 0x31, 0x0A, 0x7C, 0x7E, 0x0D,
        0x00, 0x00, 0x20, 0x11, 0x12, 0x7C, 0x7E, 0x19,
        0x00, 0x00, 0x00, 0x31, 0x0A, 0x7C, 0x7E, 0x0D,
        0x00, 0x00, 0x20, 0x11, 0x12, 0x7C, 0x7E, 0x19,
        0x00, 0x00, 0x00, 0x31, 0x0A, 0x7C, 0x7E, 0x0D,
        0x00, 0x00, 0x20, 0x11, 0x12, 0x7C, 0x7E, 0x19,
        0x00, 0x00, 0x00, 0x31, 0x0A, 0x7C, 0x7E, 0x0D
};

//led初始化
void LED_Init() {
    SCK = 0;
    RCK = 0;
}


void DelayXms(unsigned int xms) {
    while (xms--) {
        unsigned char i, j;
        i = 12;
        j = 169;
        do {
            while (--j);
        } while (--i);
    }
}

void Delay300us(void)	//@12.000MHz
{
    unsigned char  i;

    i = 102;
    while (--i);

}



void _74HC595_WriteByte(unsigned char row) {
    for (unsigned char i = 0; i < 8; i++) {
        SER = row & (0x80 >> i);
        SCK = 1;  // SCK高电平
        SCK = 0;  // SCK低电平
    }
    RCK = 1;  // 锁存数据
    RCK = 0;  // 结束锁存
}

void MatrixLED_ShowColumn(unsigned char col, unsigned char row) {
    _74HC595_WriteByte(row);
    P0 = ~(0x80 >> col);  // 选择要显示的列
    Delay300us();
    P0 = 0xFF;            // 关闭显示
}

#endif //LED_MATRIX_LED_SHOW_H
